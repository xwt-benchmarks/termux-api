apply plugin: 'com.android.application'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.termux.api"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 38
        versionName "0.38"
    }

    signingConfigs {
        debug {
            storeFile file('dev_keystore.jks')
            keyAlias 'alias'
            storePassword 'xrj45yWGLbsO7W0v'
            keyPassword 'xrj45yWGLbsO7W0v'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        debug {
            signingConfig signingConfigs.debug
        }

        checkTypes {
            javaCompileOptions.annotationProcessorOptions.
                    classNames.add("org.checkerframework.checker.keystore.KeyStoreChecker")
            // Uncomment to do the strongboxbacked checking.
            // javaCompileOptions.annotationProcessorOptions.arguments.put("lint", "strongboxbacked")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

configurations {
    checkerFrameworkAnnotatedJDK {
        description = 'a copy of JDK classes with Checker Framework type qualifiers inserted'
    }
    errorproneJavac {
        description = 'required to run the Checker Framework.'
    }
}

repositories {
    mavenLocal()
}

dependencies {
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.biometric:biometric:1.0.0-alpha04'
    implementation "androidx.media:media:1.1.0"

    ext.checkerFrameworkVersion = '3.0.1'
    annotationProcessor "org.checkerframework:keystore-checker:0.1-SNAPSHOT"
    implementation files("../../../../keystore-checker-qual-android/build/libs/keystore-checker-qual-android.jar")
    checkerFrameworkAnnotatedJDK "org.checkerframework:jdk8:${checkerFrameworkVersion}"
    compileOnly "org.checkerframework:checker-qual-android:${checkerFrameworkVersion}"
    errorproneJavac 'com.google.errorprone:javac:9+181-r4173-1'
}

task versionName {
    doLast {
        print android.defaultConfig.versionName
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile).all { compile ->
        if (compile.name.contains("CheckTypes")) {
//            compile.options.compilerArgs += [
//                    "-Xbootclasspath/p:${configurations.checkerFrameworkAnnotatedJDK.asPath}"
//            ]
            options.fork = true
            options.forkOptions.jvmArgs += ["-Xbootclasspath/p:${configurations.errorproneJavac.asPath}"]
        }
    }
}
